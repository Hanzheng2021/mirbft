// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testengine.proto

package testenginepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import mirbftpb "github.com/IBM/mirbft/mirbftpb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ScenarioConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScenarioConfig) Reset()         { *m = ScenarioConfig{} }
func (m *ScenarioConfig) String() string { return proto.CompactTextString(m) }
func (*ScenarioConfig) ProtoMessage()    {}
func (*ScenarioConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_testengine_0da2a3b56dfae249, []int{0}
}
func (m *ScenarioConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScenarioConfig.Unmarshal(m, b)
}
func (m *ScenarioConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScenarioConfig.Marshal(b, m, deterministic)
}
func (dst *ScenarioConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScenarioConfig.Merge(dst, src)
}
func (m *ScenarioConfig) XXX_Size() int {
	return xxx_messageInfo_ScenarioConfig.Size(m)
}
func (m *ScenarioConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ScenarioConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ScenarioConfig proto.InternalMessageInfo

func (m *ScenarioConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScenarioConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Event struct {
	Target               uint64               `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Time                 uint64               `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	StateEvent           *mirbftpb.StateEvent `protobuf:"bytes,3,opt,name=state_event,json=stateEvent,proto3" json:"state_event,omitempty"`
	Dropped              bool                 `protobuf:"varint,4,opt,name=dropped,proto3" json:"dropped,omitempty"`
	Delayed              uint64               `protobuf:"varint,5,opt,name=delayed,proto3" json:"delayed,omitempty"`
	Duplicated           uint64               `protobuf:"varint,6,opt,name=duplicated,proto3" json:"duplicated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_testengine_0da2a3b56dfae249, []int{1}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTarget() uint64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *Event) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetStateEvent() *mirbftpb.StateEvent {
	if m != nil {
		return m.StateEvent
	}
	return nil
}

func (m *Event) GetDropped() bool {
	if m != nil {
		return m.Dropped
	}
	return false
}

func (m *Event) GetDelayed() uint64 {
	if m != nil {
		return m.Delayed
	}
	return 0
}

func (m *Event) GetDuplicated() uint64 {
	if m != nil {
		return m.Duplicated
	}
	return 0
}

type LogEntry struct {
	// Types that are valid to be assigned to Type:
	//	*LogEntry_Scenario
	//	*LogEntry_Event
	Type                 isLogEntry_Type `protobuf_oneof:"Type"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_testengine_0da2a3b56dfae249, []int{2}
}
func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (dst *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(dst, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

type isLogEntry_Type interface {
	isLogEntry_Type()
}

type LogEntry_Scenario struct {
	Scenario *ScenarioConfig `protobuf:"bytes,1,opt,name=scenario,proto3,oneof"`
}

type LogEntry_Event struct {
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3,oneof"`
}

func (*LogEntry_Scenario) isLogEntry_Type() {}

func (*LogEntry_Event) isLogEntry_Type() {}

func (m *LogEntry) GetType() isLogEntry_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *LogEntry) GetScenario() *ScenarioConfig {
	if x, ok := m.GetType().(*LogEntry_Scenario); ok {
		return x.Scenario
	}
	return nil
}

func (m *LogEntry) GetEvent() *Event {
	if x, ok := m.GetType().(*LogEntry_Event); ok {
		return x.Event
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LogEntry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LogEntry_OneofMarshaler, _LogEntry_OneofUnmarshaler, _LogEntry_OneofSizer, []interface{}{
		(*LogEntry_Scenario)(nil),
		(*LogEntry_Event)(nil),
	}
}

func _LogEntry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LogEntry)
	// Type
	switch x := m.Type.(type) {
	case *LogEntry_Scenario:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Scenario); err != nil {
			return err
		}
	case *LogEntry_Event:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Event); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LogEntry.Type has unexpected type %T", x)
	}
	return nil
}

func _LogEntry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LogEntry)
	switch tag {
	case 1: // Type.scenario
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ScenarioConfig)
		err := b.DecodeMessage(msg)
		m.Type = &LogEntry_Scenario{msg}
		return true, err
	case 2: // Type.event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Event)
		err := b.DecodeMessage(msg)
		m.Type = &LogEntry_Event{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LogEntry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LogEntry)
	// Type
	switch x := m.Type.(type) {
	case *LogEntry_Scenario:
		s := proto.Size(x.Scenario)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LogEntry_Event:
		s := proto.Size(x.Event)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ScenarioConfig)(nil), "testenginepb.ScenarioConfig")
	proto.RegisterType((*Event)(nil), "testenginepb.Event")
	proto.RegisterType((*LogEntry)(nil), "testenginepb.LogEntry")
}

func init() { proto.RegisterFile("testengine.proto", fileDescriptor_testengine_0da2a3b56dfae249) }

var fileDescriptor_testengine_0da2a3b56dfae249 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0xed, 0xd6, 0xed, 0x5a, 0x67, 0x45, 0x24, 0x7e, 0x10, 0x44, 0x64, 0xe9, 0xa9, 0x20, 0xac,
	0x50, 0xf1, 0xe2, 0x51, 0xa9, 0xf4, 0xe0, 0x29, 0xf5, 0x2e, 0xd9, 0x66, 0xba, 0x04, 0xda, 0x24,
	0x64, 0x47, 0xa1, 0xf8, 0xdf, 0xfc, 0x6d, 0xd2, 0xd9, 0xb6, 0xb6, 0xb7, 0x37, 0xf3, 0xe6, 0xbd,
	0xcc, 0xbc, 0xc0, 0x39, 0x61, 0x43, 0xe8, 0x6a, 0xeb, 0xb0, 0x0c, 0xd1, 0x93, 0x17, 0xa7, 0xff,
	0x9d, 0x50, 0xdd, 0x5c, 0x2d, 0x6d, 0xac, 0xe6, 0x14, 0xaa, 0x87, 0x16, 0xb4, 0x43, 0x83, 0x37,
	0x38, 0x9b, 0xce, 0xd0, 0xe9, 0x68, 0xfd, 0xab, 0x77, 0x73, 0x5b, 0x0b, 0x01, 0xa9, 0xd3, 0x4b,
	0x94, 0x49, 0x91, 0x0c, 0x4f, 0x14, 0x63, 0x51, 0x40, 0x6e, 0xb0, 0x99, 0x45, 0x1b, 0xc8, 0x7a,
	0x27, 0xbb, 0x4c, 0xed, 0xb7, 0x06, 0xbf, 0x09, 0xf4, 0xc6, 0xdf, 0xe8, 0x48, 0x5c, 0x43, 0x46,
	0x3a, 0xd6, 0x48, 0xec, 0x90, 0xaa, 0x4d, 0xb5, 0xf6, 0x25, 0xbb, 0x44, 0x16, 0xa7, 0x8a, 0xb1,
	0x78, 0x82, 0xbc, 0x21, 0x4d, 0xf8, 0x89, 0x6b, 0xa9, 0x3c, 0x2a, 0x92, 0x61, 0x3e, 0xba, 0x2c,
	0xb7, 0xab, 0x96, 0xd3, 0x35, 0xc9, 0xb6, 0x0a, 0x9a, 0x1d, 0x16, 0x12, 0x8e, 0x4d, 0xf4, 0x21,
	0xa0, 0x91, 0x69, 0x91, 0x0c, 0xfb, 0x6a, 0x5b, 0x32, 0x83, 0x0b, 0xbd, 0x42, 0x23, 0x7b, 0xfc,
	0xce, 0xb6, 0x14, 0x77, 0x00, 0xe6, 0x2b, 0x2c, 0xec, 0x4c, 0x13, 0x1a, 0x99, 0x31, 0xb9, 0xd7,
	0x19, 0xfc, 0x40, 0xff, 0xdd, 0xd7, 0x63, 0x47, 0x71, 0x25, 0x9e, 0xa1, 0xdf, 0x6c, 0x42, 0xe1,
	0x23, 0xf2, 0xd1, 0x6d, 0xb9, 0x1f, 0x66, 0x79, 0x18, 0xd9, 0xa4, 0xa3, 0x76, 0xf3, 0xe2, 0x1e,
	0x7a, 0xed, 0x31, 0x5d, 0x16, 0x5e, 0x1c, 0x0a, 0x79, 0xff, 0x49, 0x47, 0xb5, 0x33, 0x2f, 0x19,
	0xa4, 0x1f, 0xab, 0x80, 0x55, 0xc6, 0x9f, 0xf1, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x81, 0xbd,
	0x32, 0x9f, 0xc5, 0x01, 0x00, 0x00,
}
