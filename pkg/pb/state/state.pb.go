//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.1
// source: state/state.proto

package state

import (
	msgs "github.com/IBM/mirbft/pkg/pb/msgs"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Event represents a state event to be injected into the state machine
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Event_Initialize
	//	*Event_LoadEntry
	//	*Event_CompleteInitialization
	//	*Event_AddResults
	//	*Event_AddClientResults
	//	*Event_Transfer
	//	*Event_Step
	//	*Event_Tick
	//	*Event_ActionsReceived
	//	*Event_ClientActionsReceived
	Type isEvent_Type `protobuf_oneof:"type"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{0}
}

func (m *Event) GetType() isEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Event) GetInitialize() *EventInitialParameters {
	if x, ok := x.GetType().(*Event_Initialize); ok {
		return x.Initialize
	}
	return nil
}

func (x *Event) GetLoadEntry() *EventPersistedEntry {
	if x, ok := x.GetType().(*Event_LoadEntry); ok {
		return x.LoadEntry
	}
	return nil
}

func (x *Event) GetCompleteInitialization() *EventLoadCompleted {
	if x, ok := x.GetType().(*Event_CompleteInitialization); ok {
		return x.CompleteInitialization
	}
	return nil
}

func (x *Event) GetAddResults() *EventActionResults {
	if x, ok := x.GetType().(*Event_AddResults); ok {
		return x.AddResults
	}
	return nil
}

func (x *Event) GetAddClientResults() *EventClientActionResults {
	if x, ok := x.GetType().(*Event_AddClientResults); ok {
		return x.AddClientResults
	}
	return nil
}

func (x *Event) GetTransfer() *msgs.CEntry {
	if x, ok := x.GetType().(*Event_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *Event) GetStep() *EventInboundMsg {
	if x, ok := x.GetType().(*Event_Step); ok {
		return x.Step
	}
	return nil
}

func (x *Event) GetTick() *EventTickElapsed {
	if x, ok := x.GetType().(*Event_Tick); ok {
		return x.Tick
	}
	return nil
}

func (x *Event) GetActionsReceived() *EventReady {
	if x, ok := x.GetType().(*Event_ActionsReceived); ok {
		return x.ActionsReceived
	}
	return nil
}

func (x *Event) GetClientActionsReceived() *EventReady {
	if x, ok := x.GetType().(*Event_ClientActionsReceived); ok {
		return x.ClientActionsReceived
	}
	return nil
}

type isEvent_Type interface {
	isEvent_Type()
}

type Event_Initialize struct {
	Initialize *EventInitialParameters `protobuf:"bytes,1,opt,name=initialize,proto3,oneof"`
}

type Event_LoadEntry struct {
	LoadEntry *EventPersistedEntry `protobuf:"bytes,2,opt,name=load_entry,json=loadEntry,proto3,oneof"`
}

type Event_CompleteInitialization struct {
	CompleteInitialization *EventLoadCompleted `protobuf:"bytes,3,opt,name=complete_initialization,json=completeInitialization,proto3,oneof"`
}

type Event_AddResults struct {
	AddResults *EventActionResults `protobuf:"bytes,4,opt,name=add_results,json=addResults,proto3,oneof"`
}

type Event_AddClientResults struct {
	AddClientResults *EventClientActionResults `protobuf:"bytes,5,opt,name=add_client_results,json=addClientResults,proto3,oneof"`
}

type Event_Transfer struct {
	Transfer *msgs.CEntry `protobuf:"bytes,6,opt,name=Transfer,proto3,oneof"` // XXX probably wrap this?
}

type Event_Step struct {
	Step *EventInboundMsg `protobuf:"bytes,7,opt,name=step,proto3,oneof"`
}

type Event_Tick struct {
	Tick *EventTickElapsed `protobuf:"bytes,8,opt,name=tick,proto3,oneof"`
}

type Event_ActionsReceived struct {
	ActionsReceived *EventReady `protobuf:"bytes,9,opt,name=actions_received,json=actionsReceived,proto3,oneof"`
}

type Event_ClientActionsReceived struct {
	ClientActionsReceived *EventReady `protobuf:"bytes,10,opt,name=client_actions_received,json=clientActionsReceived,proto3,oneof"`
}

func (*Event_Initialize) isEvent_Type() {}

func (*Event_LoadEntry) isEvent_Type() {}

func (*Event_CompleteInitialization) isEvent_Type() {}

func (*Event_AddResults) isEvent_Type() {}

func (*Event_AddClientResults) isEvent_Type() {}

func (*Event_Transfer) isEvent_Type() {}

func (*Event_Step) isEvent_Type() {}

func (*Event_Tick) isEvent_Type() {}

func (*Event_ActionsReceived) isEvent_Type() {}

func (*Event_ClientActionsReceived) isEvent_Type() {}

type EventInitialParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BatchSize            uint32 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	HeartbeatTicks       uint32 `protobuf:"varint,3,opt,name=heartbeat_ticks,json=heartbeatTicks,proto3" json:"heartbeat_ticks,omitempty"`
	SuspectTicks         uint32 `protobuf:"varint,4,opt,name=suspect_ticks,json=suspectTicks,proto3" json:"suspect_ticks,omitempty"`
	NewEpochTimeoutTicks uint32 `protobuf:"varint,5,opt,name=new_epoch_timeout_ticks,json=newEpochTimeoutTicks,proto3" json:"new_epoch_timeout_ticks,omitempty"`
	BufferSize           uint32 `protobuf:"varint,6,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
}

func (x *EventInitialParameters) Reset() {
	*x = EventInitialParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInitialParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInitialParameters) ProtoMessage() {}

func (x *EventInitialParameters) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInitialParameters.ProtoReflect.Descriptor instead.
func (*EventInitialParameters) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{1}
}

func (x *EventInitialParameters) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EventInitialParameters) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *EventInitialParameters) GetHeartbeatTicks() uint32 {
	if x != nil {
		return x.HeartbeatTicks
	}
	return 0
}

func (x *EventInitialParameters) GetSuspectTicks() uint32 {
	if x != nil {
		return x.SuspectTicks
	}
	return 0
}

func (x *EventInitialParameters) GetNewEpochTimeoutTicks() uint32 {
	if x != nil {
		return x.NewEpochTimeoutTicks
	}
	return 0
}

func (x *EventInitialParameters) GetBufferSize() uint32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

type EventPersistedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64           `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data  *msgs.Persistent `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EventPersistedEntry) Reset() {
	*x = EventPersistedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPersistedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPersistedEntry) ProtoMessage() {}

func (x *EventPersistedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPersistedEntry.ProtoReflect.Descriptor instead.
func (*EventPersistedEntry) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{2}
}

func (x *EventPersistedEntry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *EventPersistedEntry) GetData() *msgs.Persistent {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventLoadCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventLoadCompleted) Reset() {
	*x = EventLoadCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLoadCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLoadCompleted) ProtoMessage() {}

func (x *EventLoadCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLoadCompleted.ProtoReflect.Descriptor instead.
func (*EventLoadCompleted) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{3}
}

type EventActionResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digests     []*HashResult       `protobuf:"bytes,1,rep,name=digests,proto3" json:"digests,omitempty"`
	Checkpoints []*CheckpointResult `protobuf:"bytes,2,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *EventActionResults) Reset() {
	*x = EventActionResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventActionResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventActionResults) ProtoMessage() {}

func (x *EventActionResults) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventActionResults.ProtoReflect.Descriptor instead.
func (*EventActionResults) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{4}
}

func (x *EventActionResults) GetDigests() []*HashResult {
	if x != nil {
		return x.Digests
	}
	return nil
}

func (x *EventActionResults) GetCheckpoints() []*CheckpointResult {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type EventClientActionResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persisted []*msgs.RequestAck `protobuf:"bytes,1,rep,name=persisted,proto3" json:"persisted,omitempty"`
}

func (x *EventClientActionResults) Reset() {
	*x = EventClientActionResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventClientActionResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventClientActionResults) ProtoMessage() {}

func (x *EventClientActionResults) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventClientActionResults.ProtoReflect.Descriptor instead.
func (*EventClientActionResults) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{5}
}

func (x *EventClientActionResults) GetPersisted() []*msgs.RequestAck {
	if x != nil {
		return x.Persisted
	}
	return nil
}

type EventInboundMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source uint64    `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`
	Msg    *msgs.Msg `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EventInboundMsg) Reset() {
	*x = EventInboundMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInboundMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInboundMsg) ProtoMessage() {}

func (x *EventInboundMsg) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInboundMsg.ProtoReflect.Descriptor instead.
func (*EventInboundMsg) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{6}
}

func (x *EventInboundMsg) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *EventInboundMsg) GetMsg() *msgs.Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type EventTickElapsed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventTickElapsed) Reset() {
	*x = EventTickElapsed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTickElapsed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTickElapsed) ProtoMessage() {}

func (x *EventTickElapsed) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTickElapsed.ProtoReflect.Descriptor instead.
func (*EventTickElapsed) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{7}
}

type EventReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventReady) Reset() {
	*x = EventReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReady) ProtoMessage() {}

func (x *EventReady) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReady.ProtoReflect.Descriptor instead.
func (*EventReady) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{8}
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*Action_Send
	//	*Action_Hash
	//	*Action_WriteAhead
	//	*Action_Commit
	//	*Action_Checkpoint
	//	*Action_AllocatedRequest
	//	*Action_CorrectRequest
	//	*Action_ForwardRequest
	//	*Action_StateTransfer
	Type isAction_Type `protobuf_oneof:"type"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{9}
}

func (m *Action) GetType() isAction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Action) GetSend() *ActionSend {
	if x, ok := x.GetType().(*Action_Send); ok {
		return x.Send
	}
	return nil
}

func (x *Action) GetHash() *ActionHashRequest {
	if x, ok := x.GetType().(*Action_Hash); ok {
		return x.Hash
	}
	return nil
}

func (x *Action) GetWriteAhead() *ActionWrite {
	if x, ok := x.GetType().(*Action_WriteAhead); ok {
		return x.WriteAhead
	}
	return nil
}

func (x *Action) GetCommit() *ActionCommit {
	if x, ok := x.GetType().(*Action_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *Action) GetCheckpoint() *ActionCheckpoint {
	if x, ok := x.GetType().(*Action_Checkpoint); ok {
		return x.Checkpoint
	}
	return nil
}

func (x *Action) GetAllocatedRequest() *ActionRequestSlot {
	if x, ok := x.GetType().(*Action_AllocatedRequest); ok {
		return x.AllocatedRequest
	}
	return nil
}

func (x *Action) GetCorrectRequest() *msgs.RequestAck {
	if x, ok := x.GetType().(*Action_CorrectRequest); ok {
		return x.CorrectRequest
	}
	return nil
}

func (x *Action) GetForwardRequest() *ActionForward {
	if x, ok := x.GetType().(*Action_ForwardRequest); ok {
		return x.ForwardRequest
	}
	return nil
}

func (x *Action) GetStateTransfer() *ActionStateTarget {
	if x, ok := x.GetType().(*Action_StateTransfer); ok {
		return x.StateTransfer
	}
	return nil
}

type isAction_Type interface {
	isAction_Type()
}

type Action_Send struct {
	Send *ActionSend `protobuf:"bytes,1,opt,name=send,proto3,oneof"`
}

type Action_Hash struct {
	Hash *ActionHashRequest `protobuf:"bytes,2,opt,name=hash,proto3,oneof"`
}

type Action_WriteAhead struct {
	WriteAhead *ActionWrite `protobuf:"bytes,3,opt,name=write_ahead,json=writeAhead,proto3,oneof"`
}

type Action_Commit struct {
	Commit *ActionCommit `protobuf:"bytes,4,opt,name=commit,proto3,oneof"`
}

type Action_Checkpoint struct {
	Checkpoint *ActionCheckpoint `protobuf:"bytes,5,opt,name=checkpoint,proto3,oneof"`
}

type Action_AllocatedRequest struct {
	AllocatedRequest *ActionRequestSlot `protobuf:"bytes,6,opt,name=allocated_request,json=allocatedRequest,proto3,oneof"`
}

type Action_CorrectRequest struct {
	CorrectRequest *msgs.RequestAck `protobuf:"bytes,7,opt,name=correct_request,json=correctRequest,proto3,oneof"`
}

type Action_ForwardRequest struct {
	ForwardRequest *ActionForward `protobuf:"bytes,8,opt,name=forward_request,json=forwardRequest,proto3,oneof"`
}

type Action_StateTransfer struct {
	StateTransfer *ActionStateTarget `protobuf:"bytes,9,opt,name=state_transfer,json=stateTransfer,proto3,oneof"`
}

func (*Action_Send) isAction_Type() {}

func (*Action_Hash) isAction_Type() {}

func (*Action_WriteAhead) isAction_Type() {}

func (*Action_Commit) isAction_Type() {}

func (*Action_Checkpoint) isAction_Type() {}

func (*Action_AllocatedRequest) isAction_Type() {}

func (*Action_CorrectRequest) isAction_Type() {}

func (*Action_ForwardRequest) isAction_Type() {}

func (*Action_StateTransfer) isAction_Type() {}

type ActionSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []uint64  `protobuf:"varint,1,rep,packed,name=targets,proto3" json:"targets,omitempty"`
	Msg     *msgs.Msg `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ActionSend) Reset() {
	*x = ActionSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSend) ProtoMessage() {}

func (x *ActionSend) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSend.ProtoReflect.Descriptor instead.
func (*ActionSend) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{10}
}

func (x *ActionSend) GetTargets() []uint64 {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActionSend) GetMsg() *msgs.Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

// Write requires either but not both truncate to be zero,
// data is non-nil iff append is non-zero
type ActionWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Truncate uint64           `protobuf:"varint,1,opt,name=truncate,proto3" json:"truncate,omitempty"`
	Append   uint64           `protobuf:"varint,2,opt,name=append,proto3" json:"append,omitempty"`
	Data     *msgs.Persistent `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ActionWrite) Reset() {
	*x = ActionWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionWrite) ProtoMessage() {}

func (x *ActionWrite) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionWrite.ProtoReflect.Descriptor instead.
func (*ActionWrite) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{11}
}

func (x *ActionWrite) GetTruncate() uint64 {
	if x != nil {
		return x.Truncate
	}
	return 0
}

func (x *ActionWrite) GetAppend() uint64 {
	if x != nil {
		return x.Append
	}
	return 0
}

func (x *ActionWrite) GetData() *msgs.Persistent {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActionCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batch *msgs.QEntry `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
}

func (x *ActionCommit) Reset() {
	*x = ActionCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCommit) ProtoMessage() {}

func (x *ActionCommit) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCommit.ProtoReflect.Descriptor instead.
func (*ActionCommit) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{12}
}

func (x *ActionCommit) GetBatch() *msgs.QEntry {
	if x != nil {
		return x.Batch
	}
	return nil
}

type ActionCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqNo         uint64                      `protobuf:"varint,2,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	NetworkConfig *msgs.NetworkState_Config   `protobuf:"bytes,3,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	ClientStates  []*msgs.NetworkState_Client `protobuf:"bytes,4,rep,name=client_states,json=clientStates,proto3" json:"client_states,omitempty"`
}

func (x *ActionCheckpoint) Reset() {
	*x = ActionCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCheckpoint) ProtoMessage() {}

func (x *ActionCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCheckpoint.ProtoReflect.Descriptor instead.
func (*ActionCheckpoint) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{13}
}

func (x *ActionCheckpoint) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *ActionCheckpoint) GetNetworkConfig() *msgs.NetworkState_Config {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

func (x *ActionCheckpoint) GetClientStates() []*msgs.NetworkState_Client {
	if x != nil {
		return x.ClientStates
	}
	return nil
}

type ActionRequestSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ReqNo    uint64 `protobuf:"varint,2,opt,name=req_no,json=reqNo,proto3" json:"req_no,omitempty"`
}

func (x *ActionRequestSlot) Reset() {
	*x = ActionRequestSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionRequestSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRequestSlot) ProtoMessage() {}

func (x *ActionRequestSlot) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRequestSlot.ProtoReflect.Descriptor instead.
func (*ActionRequestSlot) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{14}
}

func (x *ActionRequestSlot) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ActionRequestSlot) GetReqNo() uint64 {
	if x != nil {
		return x.ReqNo
	}
	return 0
}

type ActionForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []uint64         `protobuf:"varint,1,rep,packed,name=targets,proto3" json:"targets,omitempty"`
	Ack     *msgs.RequestAck `protobuf:"bytes,2,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *ActionForward) Reset() {
	*x = ActionForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionForward) ProtoMessage() {}

func (x *ActionForward) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionForward.ProtoReflect.Descriptor instead.
func (*ActionForward) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{15}
}

func (x *ActionForward) GetTargets() []uint64 {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActionForward) GetAck() *msgs.RequestAck {
	if x != nil {
		return x.Ack
	}
	return nil
}

type ActionHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   [][]byte    `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Origin *HashResult `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *ActionHashRequest) Reset() {
	*x = ActionHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionHashRequest) ProtoMessage() {}

func (x *ActionHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionHashRequest.ProtoReflect.Descriptor instead.
func (*ActionHashRequest) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{16}
}

func (x *ActionHashRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActionHashRequest) GetOrigin() *HashResult {
	if x != nil {
		return x.Origin
	}
	return nil
}

type ActionStateTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqNo uint64 `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ActionStateTarget) Reset() {
	*x = ActionStateTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionStateTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionStateTarget) ProtoMessage() {}

func (x *ActionStateTarget) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionStateTarget.ProtoReflect.Descriptor instead.
func (*ActionStateTarget) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{17}
}

func (x *ActionStateTarget) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *ActionStateTarget) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type HashResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	// Types that are assignable to Type:
	//	*HashResult_Batch_
	//	*HashResult_EpochChange_
	//	*HashResult_VerifyBatch_
	Type isHashResult_Type `protobuf_oneof:"type"`
}

func (x *HashResult) Reset() {
	*x = HashResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult) ProtoMessage() {}

func (x *HashResult) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult.ProtoReflect.Descriptor instead.
func (*HashResult) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{18}
}

func (x *HashResult) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (m *HashResult) GetType() isHashResult_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *HashResult) GetBatch() *HashResult_Batch {
	if x, ok := x.GetType().(*HashResult_Batch_); ok {
		return x.Batch
	}
	return nil
}

func (x *HashResult) GetEpochChange() *HashResult_EpochChange {
	if x, ok := x.GetType().(*HashResult_EpochChange_); ok {
		return x.EpochChange
	}
	return nil
}

func (x *HashResult) GetVerifyBatch() *HashResult_VerifyBatch {
	if x, ok := x.GetType().(*HashResult_VerifyBatch_); ok {
		return x.VerifyBatch
	}
	return nil
}

type isHashResult_Type interface {
	isHashResult_Type()
}

type HashResult_Batch_ struct {
	Batch *HashResult_Batch `protobuf:"bytes,2,opt,name=batch,proto3,oneof"`
}

type HashResult_EpochChange_ struct {
	EpochChange *HashResult_EpochChange `protobuf:"bytes,3,opt,name=epoch_change,json=epochChange,proto3,oneof"`
}

type HashResult_VerifyBatch_ struct {
	VerifyBatch *HashResult_VerifyBatch `protobuf:"bytes,4,opt,name=verify_batch,json=verifyBatch,proto3,oneof"`
}

func (*HashResult_Batch_) isHashResult_Type() {}

func (*HashResult_EpochChange_) isHashResult_Type() {}

func (*HashResult_VerifyBatch_) isHashResult_Type() {}

type CheckpointResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqNo        uint64             `protobuf:"varint,1,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	Value        []byte             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	NetworkState *msgs.NetworkState `protobuf:"bytes,3,opt,name=network_state,json=networkState,proto3" json:"network_state,omitempty"`
	Reconfigured bool               `protobuf:"varint,4,opt,name=reconfigured,proto3" json:"reconfigured,omitempty"`
}

func (x *CheckpointResult) Reset() {
	*x = CheckpointResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointResult) ProtoMessage() {}

func (x *CheckpointResult) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointResult.ProtoReflect.Descriptor instead.
func (*CheckpointResult) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{19}
}

func (x *CheckpointResult) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *CheckpointResult) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *CheckpointResult) GetNetworkState() *msgs.NetworkState {
	if x != nil {
		return x.NetworkState
	}
	return nil
}

func (x *CheckpointResult) GetReconfigured() bool {
	if x != nil {
		return x.Reconfigured
	}
	return false
}

type HashResult_Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      uint64             `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`
	Epoch       uint64             `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	SeqNo       uint64             `protobuf:"varint,3,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	RequestAcks []*msgs.RequestAck `protobuf:"bytes,5,rep,name=request_acks,json=requestAcks,proto3" json:"request_acks,omitempty"`
}

func (x *HashResult_Batch) Reset() {
	*x = HashResult_Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult_Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult_Batch) ProtoMessage() {}

func (x *HashResult_Batch) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult_Batch.ProtoReflect.Descriptor instead.
func (*HashResult_Batch) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{18, 0}
}

func (x *HashResult_Batch) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *HashResult_Batch) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *HashResult_Batch) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *HashResult_Batch) GetRequestAcks() []*msgs.RequestAck {
	if x != nil {
		return x.RequestAcks
	}
	return nil
}

type HashResult_VerifyBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source         uint64             `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`
	SeqNo          uint64             `protobuf:"varint,2,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	RequestAcks    []*msgs.RequestAck `protobuf:"bytes,3,rep,name=request_acks,json=requestAcks,proto3" json:"request_acks,omitempty"`
	ExpectedDigest []byte             `protobuf:"bytes,4,opt,name=expected_digest,json=expectedDigest,proto3" json:"expected_digest,omitempty"`
}

func (x *HashResult_VerifyBatch) Reset() {
	*x = HashResult_VerifyBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult_VerifyBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult_VerifyBatch) ProtoMessage() {}

func (x *HashResult_VerifyBatch) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult_VerifyBatch.ProtoReflect.Descriptor instead.
func (*HashResult_VerifyBatch) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{18, 1}
}

func (x *HashResult_VerifyBatch) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *HashResult_VerifyBatch) GetSeqNo() uint64 {
	if x != nil {
		return x.SeqNo
	}
	return 0
}

func (x *HashResult_VerifyBatch) GetRequestAcks() []*msgs.RequestAck {
	if x != nil {
		return x.RequestAcks
	}
	return nil
}

func (x *HashResult_VerifyBatch) GetExpectedDigest() []byte {
	if x != nil {
		return x.ExpectedDigest
	}
	return nil
}

type HashResult_EpochChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      uint64            `protobuf:"varint,1,opt,name=source,proto3" json:"source,omitempty"`
	Origin      uint64            `protobuf:"varint,2,opt,name=origin,proto3" json:"origin,omitempty"`
	EpochChange *msgs.EpochChange `protobuf:"bytes,3,opt,name=epoch_change,json=epochChange,proto3" json:"epoch_change,omitempty"`
}

func (x *HashResult_EpochChange) Reset() {
	*x = HashResult_EpochChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_state_state_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashResult_EpochChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashResult_EpochChange) ProtoMessage() {}

func (x *HashResult_EpochChange) ProtoReflect() protoreflect.Message {
	mi := &file_state_state_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashResult_EpochChange.ProtoReflect.Descriptor instead.
func (*HashResult_EpochChange) Descriptor() ([]byte, []int) {
	return file_state_state_proto_rawDescGZIP(), []int{18, 2}
}

func (x *HashResult_EpochChange) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *HashResult_EpochChange) GetOrigin() uint64 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *HashResult_EpochChange) GetEpochChange() *msgs.EpochChange {
	if x != nil {
		return x.EpochChange
	}
	return nil
}

var File_state_state_proto protoreflect.FileDescriptor

var file_state_state_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0f, 0x6d, 0x73, 0x67, 0x73,
	0x2f, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x05, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x64, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67,
	0x73, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x08, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x12, 0x3e, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00,
	0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x4b, 0x0a, 0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x35,
	0x0a, 0x17, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x6e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22,
	0x7c, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x4a, 0x0a,
	0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x73, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x09,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x22, 0x94, 0x04, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x35, 0x0a, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x61, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x41, 0x68, 0x65, 0x61, 0x64, 0x12, 0x2d,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x48, 0x00, 0x52,
	0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67,
	0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x41, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x0a, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x1b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x67, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x51,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0xab, 0x01, 0x0a,
	0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x40, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x72, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65,
	0x71, 0x4e, 0x6f, 0x22, 0x4d, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x22,
	0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73,
	0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x03, 0x61,
	0x63, 0x6b, 0x22, 0x52, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0x40, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71,
	0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfb, 0x04, 0x0a, 0x0a, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x42, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x81, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x33, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x73, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x73, 0x1a, 0x9a, 0x01, 0x0a,
	0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x4e, 0x6f, 0x12, 0x33, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x6b, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x73, 0x0a, 0x0b, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x65, 0x71, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71,
	0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x64, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x49, 0x42, 0x4d, 0x2f, 0x6d, 0x69, 0x72, 0x62, 0x66, 0x74, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_state_state_proto_rawDescOnce sync.Once
	file_state_state_proto_rawDescData = file_state_state_proto_rawDesc
)

func file_state_state_proto_rawDescGZIP() []byte {
	file_state_state_proto_rawDescOnce.Do(func() {
		file_state_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_state_state_proto_rawDescData)
	})
	return file_state_state_proto_rawDescData
}

var file_state_state_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_state_state_proto_goTypes = []interface{}{
	(*Event)(nil),                    // 0: state.Event
	(*EventInitialParameters)(nil),   // 1: state.EventInitialParameters
	(*EventPersistedEntry)(nil),      // 2: state.EventPersistedEntry
	(*EventLoadCompleted)(nil),       // 3: state.EventLoadCompleted
	(*EventActionResults)(nil),       // 4: state.EventActionResults
	(*EventClientActionResults)(nil), // 5: state.EventClientActionResults
	(*EventInboundMsg)(nil),          // 6: state.EventInboundMsg
	(*EventTickElapsed)(nil),         // 7: state.EventTickElapsed
	(*EventReady)(nil),               // 8: state.EventReady
	(*Action)(nil),                   // 9: state.Action
	(*ActionSend)(nil),               // 10: state.ActionSend
	(*ActionWrite)(nil),              // 11: state.ActionWrite
	(*ActionCommit)(nil),             // 12: state.ActionCommit
	(*ActionCheckpoint)(nil),         // 13: state.ActionCheckpoint
	(*ActionRequestSlot)(nil),        // 14: state.ActionRequestSlot
	(*ActionForward)(nil),            // 15: state.ActionForward
	(*ActionHashRequest)(nil),        // 16: state.ActionHashRequest
	(*ActionStateTarget)(nil),        // 17: state.ActionStateTarget
	(*HashResult)(nil),               // 18: state.HashResult
	(*CheckpointResult)(nil),         // 19: state.CheckpointResult
	(*HashResult_Batch)(nil),         // 20: state.HashResult.Batch
	(*HashResult_VerifyBatch)(nil),   // 21: state.HashResult.VerifyBatch
	(*HashResult_EpochChange)(nil),   // 22: state.HashResult.EpochChange
	(*msgs.CEntry)(nil),              // 23: msgs.CEntry
	(*msgs.Persistent)(nil),          // 24: msgs.Persistent
	(*msgs.RequestAck)(nil),          // 25: msgs.RequestAck
	(*msgs.Msg)(nil),                 // 26: msgs.Msg
	(*msgs.QEntry)(nil),              // 27: msgs.QEntry
	(*msgs.NetworkState_Config)(nil), // 28: msgs.NetworkState.Config
	(*msgs.NetworkState_Client)(nil), // 29: msgs.NetworkState.Client
	(*msgs.NetworkState)(nil),        // 30: msgs.NetworkState
	(*msgs.EpochChange)(nil),         // 31: msgs.EpochChange
}
var file_state_state_proto_depIdxs = []int32{
	1,  // 0: state.Event.initialize:type_name -> state.EventInitialParameters
	2,  // 1: state.Event.load_entry:type_name -> state.EventPersistedEntry
	3,  // 2: state.Event.complete_initialization:type_name -> state.EventLoadCompleted
	4,  // 3: state.Event.add_results:type_name -> state.EventActionResults
	5,  // 4: state.Event.add_client_results:type_name -> state.EventClientActionResults
	23, // 5: state.Event.Transfer:type_name -> msgs.CEntry
	6,  // 6: state.Event.step:type_name -> state.EventInboundMsg
	7,  // 7: state.Event.tick:type_name -> state.EventTickElapsed
	8,  // 8: state.Event.actions_received:type_name -> state.EventReady
	8,  // 9: state.Event.client_actions_received:type_name -> state.EventReady
	24, // 10: state.EventPersistedEntry.data:type_name -> msgs.Persistent
	18, // 11: state.EventActionResults.digests:type_name -> state.HashResult
	19, // 12: state.EventActionResults.checkpoints:type_name -> state.CheckpointResult
	25, // 13: state.EventClientActionResults.persisted:type_name -> msgs.RequestAck
	26, // 14: state.EventInboundMsg.msg:type_name -> msgs.Msg
	10, // 15: state.Action.send:type_name -> state.ActionSend
	16, // 16: state.Action.hash:type_name -> state.ActionHashRequest
	11, // 17: state.Action.write_ahead:type_name -> state.ActionWrite
	12, // 18: state.Action.commit:type_name -> state.ActionCommit
	13, // 19: state.Action.checkpoint:type_name -> state.ActionCheckpoint
	14, // 20: state.Action.allocated_request:type_name -> state.ActionRequestSlot
	25, // 21: state.Action.correct_request:type_name -> msgs.RequestAck
	15, // 22: state.Action.forward_request:type_name -> state.ActionForward
	17, // 23: state.Action.state_transfer:type_name -> state.ActionStateTarget
	26, // 24: state.ActionSend.msg:type_name -> msgs.Msg
	24, // 25: state.ActionWrite.data:type_name -> msgs.Persistent
	27, // 26: state.ActionCommit.batch:type_name -> msgs.QEntry
	28, // 27: state.ActionCheckpoint.network_config:type_name -> msgs.NetworkState.Config
	29, // 28: state.ActionCheckpoint.client_states:type_name -> msgs.NetworkState.Client
	25, // 29: state.ActionForward.ack:type_name -> msgs.RequestAck
	18, // 30: state.ActionHashRequest.origin:type_name -> state.HashResult
	20, // 31: state.HashResult.batch:type_name -> state.HashResult.Batch
	22, // 32: state.HashResult.epoch_change:type_name -> state.HashResult.EpochChange
	21, // 33: state.HashResult.verify_batch:type_name -> state.HashResult.VerifyBatch
	30, // 34: state.CheckpointResult.network_state:type_name -> msgs.NetworkState
	25, // 35: state.HashResult.Batch.request_acks:type_name -> msgs.RequestAck
	25, // 36: state.HashResult.VerifyBatch.request_acks:type_name -> msgs.RequestAck
	31, // 37: state.HashResult.EpochChange.epoch_change:type_name -> msgs.EpochChange
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_state_state_proto_init() }
func file_state_state_proto_init() {
	if File_state_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_state_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInitialParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPersistedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLoadCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventActionResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventClientActionResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInboundMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTickElapsed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionRequestSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionStateTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult_Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult_VerifyBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_state_state_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashResult_EpochChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_state_state_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Initialize)(nil),
		(*Event_LoadEntry)(nil),
		(*Event_CompleteInitialization)(nil),
		(*Event_AddResults)(nil),
		(*Event_AddClientResults)(nil),
		(*Event_Transfer)(nil),
		(*Event_Step)(nil),
		(*Event_Tick)(nil),
		(*Event_ActionsReceived)(nil),
		(*Event_ClientActionsReceived)(nil),
	}
	file_state_state_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Action_Send)(nil),
		(*Action_Hash)(nil),
		(*Action_WriteAhead)(nil),
		(*Action_Commit)(nil),
		(*Action_Checkpoint)(nil),
		(*Action_AllocatedRequest)(nil),
		(*Action_CorrectRequest)(nil),
		(*Action_ForwardRequest)(nil),
		(*Action_StateTransfer)(nil),
	}
	file_state_state_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*HashResult_Batch_)(nil),
		(*HashResult_EpochChange_)(nil),
		(*HashResult_VerifyBatch_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_state_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_state_state_proto_goTypes,
		DependencyIndexes: file_state_state_proto_depIdxs,
		MessageInfos:      file_state_state_proto_msgTypes,
	}.Build()
	File_state_state_proto = out.File
	file_state_state_proto_rawDesc = nil
	file_state_state_proto_goTypes = nil
	file_state_state_proto_depIdxs = nil
}
